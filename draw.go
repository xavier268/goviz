package main

import (
	"fmt"
	"go/ast"
	"io"
	"path/filepath"
	"strings"
	"time"
)

// Draw the package graph into the provided file
func DrawPackages(of io.Writer, pkgs map[string]*ast.Package) {

	fmt.Fprintln(of, "// Autogenerated on ", time.Now())

	fmt.Fprintln(of, "strict digraph {")
	defer fmt.Fprintln(of, "}")

	for pname, p := range pkgs {
		for _, ff := range p.Files {
			for _, imp := range ff.Imports {
				base := filepath.Base(imp.Path.Value)
				base = strings.Trim(base, "\"")            // remove quotes
				if strings.Contains(imp.Path.Value, "/") { // local packages
					fmt.Fprintf(of, "%q -> %q [color=blue]\n", pname, base)
				} else { // std packages
					fmt.Fprintf(of, "%q -> %q [color=red]\n", pname, base)
				}

			}
		}
	}

}
